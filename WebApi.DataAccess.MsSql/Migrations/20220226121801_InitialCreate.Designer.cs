// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApi.DataAccess.MsSql;

namespace WebApi.DataAccess.MsSql.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220226121801_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApi.Entities.Models.Application", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ApprovalStartDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExecutionDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("InitiatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.HasIndex("InitiatorId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("WebApi.Entities.Models.ApprovalTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ApprovalTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ApproverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("ApproverId");

                    b.ToTable("ApprovalTasks");
                });

            modelBuilder.Entity("WebApi.Entities.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b059396d-52cc-48dc-a802-854716426141"),
                            Login = "andrey.paltusov@awara-it.com",
                            Name = "Андрей Палтусов",
                            Password = "5555",
                            Role = 4
                        },
                        new
                        {
                            Id = new Guid("75ac102d-e6ec-46ae-b403-9492b58381f7"),
                            Login = "dpetelko@gmail.com",
                            Name = "Дмитрий Петелько",
                            Password = "5555",
                            Role = 0
                        },
                        new
                        {
                            Id = new Guid("54de9582-4e80-4036-b098-f4256d0fe445"),
                            Login = "irina.ivanova@awara-it.com",
                            Name = "Ирина Иванова",
                            Password = "5555",
                            Role = 2
                        },
                        new
                        {
                            Id = new Guid("87395329-261a-42eb-9c51-cf94aa80cb3b"),
                            Login = "ivan.sergeev@awara-it.com",
                            Name = "Иван Сергеев",
                            Password = "5555",
                            Role = 1
                        },
                        new
                        {
                            Id = new Guid("0dc50556-0f83-4d70-9d3a-ae9859ce2f4f"),
                            Login = "petr.smirnov@awara-it.com",
                            Name = "Петр Смирнов",
                            Password = "5555",
                            Role = 4
                        });
                });

            modelBuilder.Entity("WebApi.Entities.Models.Application", b =>
                {
                    b.HasOne("WebApi.Entities.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Entities.Models.User", "Initiator")
                        .WithMany()
                        .HasForeignKey("InitiatorId");

                    b.Navigation("Creator");

                    b.Navigation("Initiator");
                });

            modelBuilder.Entity("WebApi.Entities.Models.ApprovalTask", b =>
                {
                    b.HasOne("WebApi.Entities.Models.Application", "Application")
                        .WithMany("ApprovalProcess")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Entities.Models.User", "Approver")
                        .WithMany()
                        .HasForeignKey("ApproverId");

                    b.Navigation("Application");

                    b.Navigation("Approver");
                });

            modelBuilder.Entity("WebApi.Entities.Models.Application", b =>
                {
                    b.Navigation("ApprovalProcess");
                });
#pragma warning restore 612, 618
        }
    }
}
